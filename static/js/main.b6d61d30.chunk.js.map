{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Feedback","options","onLeaveFeedback","className","map","option","value","type","onClick","FeedbackOptions","good","neutral","bad","total","positiveFeedback","Section","title","children","Notification","message","App","state","setState","prevState","buttons","Object","keys","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAEe,SAASA,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC1C,OACE,oBAAIC,UAAU,cAAd,SACGF,EAAQG,KAAI,SAAAC,GACX,OACE,oBAAIF,UAAU,aAAd,SACE,wBACEA,UAAU,SACVG,MAAOD,EACPE,KAAK,SACLC,QAAS,kBAAMN,EAAgBG,IAJjC,SAMGA,KAP2BA,QCP3B,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,iBAEA,OACE,qBAAIX,UAAU,aAAd,UACE,wCAAWO,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,U,MCXS,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASd,UAAU,UAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBa,IACtBC,K,MCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGhB,UAAU,eAAb,SAA6BgB,I,ICEhCC,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPV,gBAAkB,SAAAG,GAChB,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAASkB,EAAUlB,GAAU,O,4CAIlC,WACE,IAAMmB,EAAUC,OAAOC,KAAKC,KAAKN,OACjC,EAA+BM,KAAKN,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfV,EAAoByB,KAApBzB,gBACF0B,EAAqBlB,EAAOC,EAAUC,EACtCiB,EAAkCC,KAAKC,MAC1CrB,EAAOkB,EAAsB,KAEhC,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAChB,EAAD,CACEC,QAASuB,EACTtB,gBAAiBA,MAIrB,cAAC,EAAD,CAASc,MAAM,aAAf,SACGY,EACC,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,iBAAkBe,IAGpB,cAAC,EAAD,CAAcV,QAAQ,+B,GAxChBa,aAgDHZ,IChDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b6d61d30.chunk.js","sourcesContent":["import './FeedbackOptions.css';\n\nexport default function Feedback({ options, onLeaveFeedback }) {\n  return (\n    <ul className=\"buttonsList\">\n      {options.map(option => {\n        return (\n          <li className=\"buttonItem\" key={option}>\n            <button\n              className=\"button\"\n              value={option}\n              type=\"button\"\n              onClick={() => onLeaveFeedback(option)}\n            >\n              {option}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","export default function FeedbackOptions({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveFeedback,\n}) {\n  return (\n    <ul className=\"statistics\">\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positiveFeedback}%</li>\n    </ul>\n  );\n}\n","import './Section.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      <h1 className=\"title\">{title}</h1>\n      {children}\n    </section>\n  );\n}\n","import './Notification.css';\n\nexport default function Notification({ message }) {\n  return <p className=\"notification\">{message}</p>;\n}\n","import { Component, Fragment } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  render() {\n    const buttons = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const { onLeaveFeedback } = this;\n    const countTotalFeedback = good + neutral + bad;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100,\n    );\n    return (\n      <Fragment>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttons}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positiveFeedback={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}